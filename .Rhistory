df[filter(df, AGE > 30)]
filter(df, AGE > 30) <- "30"
df$AGE[filter(df, AGE > 30)] <- "30"
library(tidyverse)
library(questionR)
library(openxlsx)
df <- openxlsx::read.xlsx("./Sources/vico2020.xlsx")
df
select(df, AGE, SEXE)
select(df, AGE, SEXE) & filter(df, AGE %in% 20:62)
filter(select(df, AGE, SEXE), AGE %in% 20:62)
df2 <- filter(select(df, AGE, SEXE), AGE %in% 20:62)
View(df2)
arrange(filter(select(df, AGE, SEXE), AGE %in% 20:62), desc(SEXE))
arrange(filter(select(df, AGE, SEXE), AGE %in% 20:62), desc(AGE))
View(df2)
df2 <- arrange(filter(select(df, AGE, SEXE), AGE %in% 20:62), desc(AGE))
View(df2)
df2 <- select(df, AGE, SEXE)
df2 <- filter(df2, AGE %in% 20:62)
df2 <- arrange(df2, desc(62))
View(df)
View(df2)
View(df2)
df <- openxlsx::read.xlsx("./Sources/vico2020.xlsx")
df2 <- select(df, AGE, SEXE)
df2 <- filter(df2, AGE %in% 20:62)
df2 <- arrange(df2, desc(62))
View(df2)
View(df2)
df2 <- arrange(df2, desc(AGE))
View(df2)
df %>% select(AGE, SEXE) %>% filter(AGE %in% 20:62) %>% arrange(desc(AGE))
df2 <- df %>% select(AGE, SEXE) %>% filter(AGE %in% 20:62) %>% arrange(desc(AGE))
View(df2)
df2 <- df %>%
select(AGE, SEXE) %>%
filter(AGE %in% 20:62) %>%
arrange(desc(AGE))
df2 <- df %>%
select(AGE, SEXE) %>%
filter(AGE %in% 20:62) %>%
arrange(desc(AGE))
df %>% select(-AMIS, -RESNB) %>%
filter(AGE > 60,
SEXE == "Une femme",
MASQUE == "Oui")
df <- openxlsx::read.xlsx("Sources/DONNEES_RJC_18_11.xlsx", colNames = TRUE)
df2 <- df %>% select(starts_with("Dans.quelle(s).discipline(s).avez-vous.obtenu.votre.(vos).master(s)"))
for (i in 1:length(names(df2))) {
print(as.character(col_names[i]))
df2[i][df2[i] !="Oui" & df2[i] !="Non" & is.na(df2[i]) == F] <- "Autre"
df2[i][df2[i]=="Oui"] <- as.character(col_names[i])
df2[i][df2[i]=="Non"] <- NA
df2[i][is.na(df2[i])] <- NA
}
col_names <- c("Anthropologie/ethnologie", "Économie", "Droit", "Géographie", "Histoire", "Philosophie", "Psychologie", "Santé.publique", "Sciences.de.gestion.et.management", "Sciences.de.l’éducation", "Sciences.de.l’information.et.de.la.communication", "Sciences.politiques", "Sociologie", "STAPS", "Autre")
for (i in 1:length(names(df2))) {
print(as.character(col_names[i]))
df2[i][df2[i] !="Oui" & df2[i] !="Non" & is.na(df2[i]) == F] <- "Autre"
df2[i][df2[i]=="Oui"] <- as.character(col_names[i])
df2[i][df2[i]=="Non"] <- NA
df2[i][is.na(df2[i])] <- NA
}
df2 %>%
kable(booktabs = TRUE) %>%
kable_styling(font_size = 15, "striped", fixed_thead = TRUE) %>%
scroll_box(width = "1000px", height = "400px")
df2 <- unite(df2, "Dans.quelle(s).discipline(s).avez-vous.obtenu.votre.(vos).master(s).?", names(df2), sep = "-", na.rm = T)
df2$`Dans.quelle(s).discipline(s).avez-vous.obtenu.votre.(vos).master(s).?`[df2$`Dans.quelle(s).discipline(s).avez-vous.obtenu.votre.(vos).master(s).?` == ""] <- NA
df2$`Dans.quelle(s).discipline(s).avez-vous.obtenu.votre.(vos).master(s).?` %>% freq() %>% arrange(desc(n))
df2$`Dans.quelle(s).discipline(s).avez-vous.obtenu.votre.(vos).master(s).?` %>% freq()# %>% arrange(desc(n))
df2$`Dans.quelle(s).discipline(s).avez-vous.obtenu.votre.(vos).master(s).?` %>% freq() %>% arrange(desc(n))
df <- openxlsx::read.xlsx("Sources/DONNEES_RJC_18_11.xlsx", colNames = TRUE)
df <- df %>% select(starts_with("Dans.quelle(s).discipline(s).avez-vous.obtenu.votre.(vos).master(s)"))
df[df == "N/A"] <- NA
df %>%
kable(booktabs = TRUE) %>%
kable_styling(font_size = 15, "striped", fixed_thead = TRUE) %>%
scroll_box(width = "1000px", height = "400px")
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("index.rmd", "bookdown::gitbook")
bookdown::render_book("./bookdown/index.rmd", "bookdown::gitbook")
render_book()
bookdown::render_book()
bookdown::render_book("./bookdown/")
bookdown::render_book("./bookdown/")
bookdown::render_book("./bookdown/")
bookdown::render_book("./bookdown/")
bookdown::render_book("./bookdown/")
bookdown::render_book("./bookdown/")
bookdown::render_book("./bookdown/")
df <- read.xlsx("../Sources/vico2020.xlsx")
tibble(df) %>%
kable(booktabs = TRUE) %>%
kable_styling(font_size = 15, "striped", fixed_thead = TRUE) %>%
scroll_box(width = "1000px", height = "400px")
tmp <- table(df$PCS_rec6, df$REV) %>%
as.data.frame() %>%
pivot_wider(names_from = Var1, values_from = Freq)
colnames <- tmp %>%
select(-Var2) %>% colnames()
Tot <- c("Total")
for (col in colnames) {
Tot <- append(Tot, sum(tmp[col]))
}
tmp
tmp$Var2 <- as.character(tmp$Var2)
tmp <- rbind(tmp, Tot)
for (col in colnames) {
tmp[col] <- as.double(tmp[[col]])
}
tmp$Tot_C <- tmp %>%
select(-Var2) %>%
rowSums()
tmp %>% relocate(Tot_C, .before = `Agriculteurs, agricultrices`) %>% arrange(desc(Tot_C))
bookdown::render_book("index.Rmd", "bookdown::gitbook")
bookdown::render_book("./bookdown/")
bookdown::render_book("./bookdown/")
bookdown::render_book("./bookdown/")
for (i in 1:10){
print(i%%2)
}
for (i in 1:10){
print(i%%3)
}
4/3
3/3
4/3
5/3
for (i in 1:10){
print(i%%3)
}
3/3
4/3
5/3
6/3
7/3
8/3
for (i in 1:10){
print(i%%3)
}
for (i in 1:10){
sprintf("%d, %d", i, i%%3) %>% print()
}
library(tidyverse)
for (i in 1:10){
sprintf("%d, %d", i, i%%3) %>% print()
}
for (i in 1:10){
sprintf("%d, %d", i, i%%3) %>% print()
}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(questionr)
library(openxlsx)
library(kableExtra)
library(lubridate)
df <-openxlsx::read.xlsx("~/0 - Projets/enquête Sport/DONNEES_RJC_18_11.xlsx")
knitr::kable(df) %>% kable_styling("striped") %>% scroll_box()
df <- df %>% select(-starts_with("Durée.pour."))
df[df == "N/A"] <- NA
df <- df %>% rename(These_soutenu = `Avez-vous.soutenu.votre.thèse.?`)
col_names <- df %>% select("En.quelle.année.avez-vous.soutenu.votre.thèse.?":"Depuis.votre.soutenance......[Combien.de.fois.avez-vous.été.classé·e.sur.un.poste.en.institut.de.recherche.?.]") %>% colnames()
for (col in col_names) {
df[[col]][df$These_soutenu == "Non"] <- "NC"
}
res <- df[col_names]
res %>%
kable(booktabs = TRUE) %>%
kable_styling(font_size = 15, "striped", fixed_thead = TRUE) %>%
scroll_box(width = "1000px", height = "400px")
View(res)
recod_NC <- function(x, var_test, list_col, test) {
for (col in list_col) {
x[[col]][x[var_test] == test] <- "NC"
}
return(x %>% select(list_col))
}
df <- df %>% rename(concours_FP = `Êtes-vous.titulaire.d’un.concours.de.la.fonction.publique.?`)
col_names <- df %>% select(`Le(s)quel(s).?.[AGREG]`:`Le(s)quel(s).?.[Autre]`) %>% colnames()
df[col_names] <- recod_NC(df, "concours_FP", col_names, "Non")
df %>% select(col_names)
recod_NC <- function(x, var_test, list_col, test) {
for (col in list_col) {
x[[col]][x[var_test] == test] <- "NC"
}
return(x %>% dplyr::select(list_col))
}
df[col_names] <- recod_NC(df, "concours_FP", col_names, "Non")
df %>% dplyr::select(col_names)
col_names <- df %>% select(`Le(s)quel(s).?.[AGREG]`:`Le(s)quel(s).?.[Autre]`) %>% colnames()
df[col_names] <- recod_NC(df, "concours_FP", col_names, "Non")
df %>% dplyr::select(col_names)
View(df)
df <- df %>% rename(These_construction = `Laquelle.de.ces.propositions.correspond.le.mieux.à.la.thèse.que.vous.réalisez.actuellement/que.vous.avez.soutenue.?`)
col_names <- df %>% select(`Laquelle.de.ces.propositions.correspond.le.mieux.à.la.thèse.que.vous.réalisez.actuellement/que.vous.avez.soutenue.?.[Autre]`) %>% colnames()
df[[col_names]][!is.na(df$These_construction) & df$These_construction != "Autre"] <- "NC"
df %>% select(col_names)
df <- df %>% rename(utilite_CST = `Ce.suivi.vous.a-t-il.semblé.utile.?.-.1`)
col_names <- df %>% select(`Vous.avez.bénéficié.d’un.CST.jugé.inutile..Pour.quelle(s).raison(s).?.[Les.retours.n’étaient.pas.adaptés]`:`Vous.avez.bénéficié.d’un.CST.jugé.inutile..Pour.quelle(s).raison(s).?.[Autre]`) %>% colnames()
df <- df %>% rename(utilite_CST = `Ce.suivi.vous.a-t-il.semblé.utile.?.-.1`)
df[col_names] <- recod_NC(df, "utilite_CST", col_names, c("Utile", "Très utile"))
col_names <- df %>% select(`Vous.avez.bénéficié.d’un.CST.jugé.inutile..Pour.quelle(s).raison(s).?.[Les.retours.n’étaient.pas.adaptés]`:`Vous.avez.bénéficié.d’un.CST.jugé.inutile..Pour.quelle(s).raison(s).?.[Autre]`) %>% colnames()
df[col_names] <- recod_NC(df, "utilite_CST", col_names, c("Utile", "Très utile"))
df %>% select(utilite_CST, col_names)
recod_NC <- function(x, var_test, list_col, test) {
for (col in list_col) {
x[[col]][x[var_test] %in% test] <- "NC"
}
return(x %>% dplyr::select(list_col))
}
df[col_names] <- recod_NC(df, "utilite_CSI", col_names, c("Utile", "Très utile"))
recod_NC <- function(x, var_test, list_col, test) {
for (col in list_col) {
x[[col]][x[,var_test] %in% test] <- "NC"
}
return(x %>% dplyr::select(list_col))
}
col_names <- df %>% select(`Vous.avez.bénéficié.d’un.CST.jugé.inutile..Pour.quelle(s).raison(s).?.[Les.retours.n’étaient.pas.adaptés]`:`Vous.avez.bénéficié.d’un.CST.jugé.inutile..Pour.quelle(s).raison(s).?.[Autre]`) %>% colnames()
df[col_names] <- recod_NC(df, "utilite_CST", col_names, c("Utile", "Très utile"))
df %>% select(utilite_CST, col_names)
df <- df %>% rename(Benefice_CSI = `Avez-vous.bénéficié.d’un.Comité.de.Suivi.Individuel.(CSI.-.concerne.le.rapport.aux.directeur·rices.de.thèse./.membres.du.laboratoire./.à.l’école.doctorale)`)
col_names <- df %>% select(`Avez-vous.contribué.au.choix.des.membres.du.comité? `) %>% colnames()
df[col_names] <- recod_NC(df, "Benefice_CSI", col_names, "Non")
df %>% select(Benefice_CSI, col_names)
identifyer <- function(x, pat = "\\[.*\\]"){
tab = data.frame(VAR = c(),
NB = c(),
option = c())
nom_col <- names(x)
for (col in nom_col) {
options <- ""
if (str_detect(col, pattern = pat)) {
pat <- str_split(col, pattern = pat)[[1]][1]
options <- x %>% dplyr::select(starts_with(pat)) %>%
colnames() %>%
str_extract(pattern = pat) %>%
paste(options)
} else {
next
}
print(typeof(options))
print(options)
tmp <- x %>% dplyr::select(starts_with(pat))
if (length(tmp) > 1){
tmp <- data.frame(VAR = pat,
NB = length(tmp),
option = as.vector(options))
tab <- rbind(tab, tmp)
}
print(tab)
}
return(unique(tab))
}
identifyer(res[1:20], pat = "\\[.*\\]") %>%
kable() %>%
kable_styling("striped") %>%
scroll_box(fixed_thead = TRUE)
temp <- df %>% is.na() %>% rowSums()
temp
temp
temp <- data.frame(temp) %>%
mutate("nb_var" = ncol(df),
"%" = round(temp/ncol(df), 3) * 100)
temp
condition <- temp$`%` <= 20
res <- df[condition == T, ]
res %>% kable() %>% kable_styling("striped") %>% scroll_box(fixed_thead = TRUE)
res %>% kable() %>% kable_styling("striped") %>% scroll_box(fixed_thead = TRUE)
dim(df) - dim(res)  ### Nb de personne éliminé du questionnaire pour trop de NA's
dim(res)
identifyer(res, pat = "\\[.*\\]") %>%
kable() %>%
kable_styling("striped") %>%
scroll_box(fixed_thead = TRUE)
identifyer(res, pat = "\\[.*\\]") %>%
kable() %>%
kable_styling("striped") %>%
scroll_box(fixed_thead = TRUE)
res <- df[condition == T, ]
identifyer(res, pat = "\\[.*\\]") %>%
kable() %>%
kable_styling("striped") %>%
scroll_box(fixed_thead = TRUE)
temp <- df %>% is.na() %>% rowSums()
temp
temp <- data.frame(temp) %>%
mutate("nb_var" = ncol(df),
"%" = round(temp/ncol(df), 3) * 100)
temp
condition <- temp$`%` <= 20
res <- df[condition == T, ]
res %>% kable() %>% kable_styling("striped") %>% scroll_box(fixed_thead = TRUE)
dim(df) - dim(res)  ### Nb de personne éliminé du questionnaire pour trop de NA's
dim(res)
res
knitr::opts_chunk$set(echo = TRUE)
library(questionr)
data("hdv2003")
library(tidyverse)
library(openxlsx)
df <- hdv2003
head(df, 10)
tail(df, 20)
df[df$age > 60 & df$occup == "Exerce une profession"]
df[,df$age > 60 & df$occup == "Exerce une profession"]
df[,df$age > 60]
df[df$age > 60]
df[df['age']> 60]
df[,df['age']> 60]
df[df$sexe == "Homme"]
df[,df$sexe == "Homme"]
df$age[df$sexe == "Homme"]
condition = df$age < 60 & df$occup == "Exerce une profession"
condition
df[condition]
df[condition, ]
length(df[condition, ])
nrow(df[condition, ])
# avec filter()
df %>%
filter(age < 60, occup == "Exerce une profession") %>%
nrow()
nrow(df[condition, ])
# avec filter()
df %>%
filter(age < 60, occup == "Exerce une profession") %>%
head()
knitr::opts_chunk$set(echo = TRUE)
names(df)
library(questionr)
library(tidyverse)
library(openxlsx)
data("hdv2003")
df <- hdv2003
names(df)
### Plusieurs méthodes
# avec []
condition = names(df) == c('age', 'poids', 'relig', 'occup')
condition
### Plusieurs méthodes
# avec []
condition = names(df) %in% c('age', 'poids', 'relig', 'occup')
condition
df[, condition]
df[, condition] %>% head()
df[, condition] %>% names()
# avec select()
df %>% select('age', 'poids', 'relig', 'occup')
df[condition, ] %>% head()
condition = df$age < 60 & df$occup == "Exerce une profession"
df[condition, ] %>% head()
### Plusieurs méthodes
# avec []
condition = names(df) %in% c('age', 'poids', 'relig', 'occup')
df[, condition] %>% names()
# avec select()
df %>%
select('age', 'poids', 'relig', 'occup') %>%
names()
df %>%
filter(sexe == "Femme", age > 60) %>%
select(c("hard.rock","lecture.bd", "peche.chasse", "cuisine", "bricol",  "cinema", "sport", "heures.tv"))
df %>%
filter(sexe == "Femme", age > 60) %>%
select(c("hard.rock","lecture.bd", "peche.chasse", "cuisine", "bricol",  "cinema", "sport", "heures.tv")) %>%
freq(bricol)
df %>%
filter(sexe == "Femme", age > 60) %>%
select(c("hard.rock","lecture.bd", "peche.chasse", "cuisine", "bricol",  "cinema", "sport", "heures.tv")) %>%
table(bricol)
df %>%
filter(sexe == "Femme", age > 60) %>%
select(c("hard.rock","lecture.bd", "peche.chasse", "cuisine", "bricol",  "cinema", "sport", "heures.tv"))
### 2 méthodes
condition_col = names(df) %in% c("hard.rock","lecture.bd", "peche.chasse", "cuisine", "bricol",  "cinema", "sport", "heures.tv")
condition_ind = df$sexe == "Femme" & df$age > 60
df[condition_ind, condition_col]
df[condition_ind, condition_col] %>% head()
df %>%
filter(sexe == "Femme", age > 60) %>%
select(c("hard.rock","lecture.bd", "peche.chasse", "cuisine", "bricol",  "cinema", "sport", "heures.tv")) %>%
head()
df %>%
filter(sexe == "Homme") %>%
dim()
### Ou sinon
df_H <- df %>% filter(sexe == "Homme")
nrow(df_H)
ncol(df_H)
### Ou sinon
df_H <- df %>% filter(sexe == "Homme")
nrow(df_H)
ncol(df_H)
df %>%
filter(sexe == "Homme") %>%
dim()
### Plusieurs manières de faire :
df$sexe_reco[df$sexe == "Homme"] <- "H"
df$sexe_reco[df$sexe == "Femme"] <- "F"
unique(df$sexe_reco)
df$sexe_reco <- ifelse(df$sexe == "Homme", "H", "F")
unique(df$sexe_reco)
### Plusieurs manières de faire :
# Avec []
df$sexe_reco[df$sexe == "Homme"] <- "H"
df$sexe_reco[df$sexe == "Femme"] <- "F"
df$sexe_reco <- ifelse(df$sexe_reco == "H", "Homme", "Femme")
unique(df$sexe_reco)
df$sexe_reco <- case_when(
df$sexe == "Homme" ~ "H",
df$sexe == "Femme" ~ "F"
)
unique(df$sexe_reco)
### Plusieurs manières de faire :
# Avec []
df$sexe_reco[df$sexe == "Homme"] <- "H"
df$sexe_reco[df$sexe == "Femme"] <- "F"
unique(df$sexe_reco)
# Avec ifelse()
df$sexe_reco <- ifelse(df$sexe_reco == "H", "Homme", "Femme")
unique(df$sexe_reco)
# Avec case_when()
df$sexe_reco <- case_when(
df$sexe == "Homme" ~ "H",
df$sexe == "Femme" ~ "F"
)
unique(df$sexe_reco)
levels(df$clso)
levels(qualif)
levels(df$qualif)
df$qualif_reco <- case_when(
df$qualif == "Ouvrier qualifie" $ df$qualif == "Ouvrier specialise" ~ "Ouvrier"
df$qualif_reco <- case_when(
df$qualif == "Ouvrier qualifie" & df$qualif == "Ouvrier specialise" ~ "Ouvrier"
)
df$qualif_reco
levels(df$qualif)
df$qualif_reco <- fct_recode(
"Ouvrier" = "Ouvrier specialise",
"Ouvrier" = "Ouvrier qualifie"
)
df$qualif_reco <- fct_recode(df$qualif,
"Ouvrier" = "Ouvrier specialise",
"Ouvrier" = "Ouvrier qualifie"
)
levels(df$qualif_reco)
df$qualif %>% mutate(
qualif_reco = fct_recode(
"Ouvrier" = "Ouvrier specialise",
"Ouvrier" = "Ouvrier qualifie"
)
)
df$qualif %>%
mutate(
"qualif_reco" = fct_recode(
"Ouvrier" = "Ouvrier specialise",
"Ouvrier" = "Ouvrier qualifie"
)
)
df$qualif %>%
mutate(
"qualif_reco" = fct_recode(
"Ouvrier" = "Ouvrier specialise",
"Ouvrier" = "Ouvrier qualifie"
)
)
df%>%
mutate(
qualif_reco = fct_recode(
qualif,
"Ouvrier" = "Ouvrier specialise",
"Ouvrier" = "Ouvrier qualifie"
)
)
levels(qualif_reco)
levels(df$qualif_reco)
df$qualif_reco2 <- df %>%
mutate(
qualif_reco = fct_recode(
qualif,
"Ouvrier" = "Ouvrier specialise",
"Ouvrier" = "Ouvrier qualifie"
)
)
df <- df %>%
mutate(
qualif_reco = fct_recode(
qualif,
"Ouvrier" = "Ouvrier specialise",
"Ouvrier" = "Ouvrier qualifie"
)
)
levels(df$qualif_reco)
condition = names(df) %in% -c("sexe_reco", "qualif_reco")
condition = names(df) %in% c(-"sexe_reco", -"qualif_reco")
condition = names(df) %in% !c("sexe_reco", "qualif_reco")
condition = names(df) !%in% c("sexe_reco", "qualif_reco")
condition = names(df) !%in% c("sexe_reco", "qualif_reco")
condition = names(df) %in% -c("sexe_reco", "qualif_reco")
condition = names(df) negate(%in%) c("sexe_reco", "qualif_reco")
%notin% = negate(%in%)
%notin% = Negate(%in%)
notin = Negate(%in%)
condition
condition = names(df) %in% c("sexe_reco", "qualif_reco")
condition
df
df[,!condition]
df <- df %>% select(-qualif_reco2)
df %>% select(-sexe_reco, -qualif_reco)
